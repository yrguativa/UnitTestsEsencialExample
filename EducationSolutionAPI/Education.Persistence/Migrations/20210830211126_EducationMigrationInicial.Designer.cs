// <auto-generated />
using System;
using Education.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Education.Persistence.Migrations
{
    [DbContext(typeof(EducationDbContext))]
    [Migration("20210830211126_EducationMigrationInicial")]
    partial class EducationMigrationInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Education.Domain.Curso", b =>
                {
                    b.Property<Guid>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = new Guid("d3ca4bbf-e6a1-4849-aa00-05fda455e1ed"),
                            Descripcion = "Curso de c# basico",
                            FechaCreacion = new DateTime(2021, 8, 30, 17, 11, 25, 722, DateTimeKind.Local).AddTicks(3430),
                            FechaPublicacion = new DateTime(2023, 8, 30, 17, 11, 25, 726, DateTimeKind.Local).AddTicks(4426),
                            Precio = 56m,
                            Titulo = "C# desde cero hasta avanzado"
                        },
                        new
                        {
                            CursoId = new Guid("07213f91-815f-4ffb-927d-e2cc0e7ff366"),
                            Descripcion = "Curso de Java",
                            FechaCreacion = new DateTime(2021, 8, 30, 17, 11, 25, 729, DateTimeKind.Local).AddTicks(281),
                            FechaPublicacion = new DateTime(2023, 8, 30, 17, 11, 25, 729, DateTimeKind.Local).AddTicks(306),
                            Precio = 25m,
                            Titulo = "Master en Java Spring desde las raices"
                        },
                        new
                        {
                            CursoId = new Guid("247b54d0-7e19-44b8-8de6-cb5e627b662f"),
                            Descripcion = "Curso de Unit Test para NET Core",
                            FechaCreacion = new DateTime(2021, 8, 30, 17, 11, 25, 729, DateTimeKind.Local).AddTicks(428),
                            FechaPublicacion = new DateTime(2023, 8, 30, 17, 11, 25, 729, DateTimeKind.Local).AddTicks(577),
                            Precio = 1000m,
                            Titulo = "Master en UNIT Test con CQRS"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
